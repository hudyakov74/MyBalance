MODULE ActionFormBf001;

REQUIRE FormBf001ComReport,Utils,DimRawNomenklBf;

NAMESPACE Forms;

// процедуры загрузки
EXTEND CLASS TypeRequest {
    FormBf001ComReport1 'Отчет комиссионера, форма Zalnova (Отчеты комиссионеров)'
}




Report1_Zalnova(Calc calcP,CubeValueComReportTitle title, Task task) {
      LOCAL titleTabl =   BPISTRING[100] (INTEGER);
      LOCAL article = BPISTRING[100] (INTEGER); 
      LOCAL feature = BPISTRING[100] (INTEGER); 
      LOCAL color = BPISTRING[100] (INTEGER); 
      LOCAL sum = NUMERIC[14,2] (INTEGER); 
      LOCAL sumKomm = NUMERIC[14,2] (INTEGER); 
      LOCAL kol = INTEGER (INTEGER);
      LOCAL r = INTEGER (INTEGER);
      LOCAL numRet = INTEGER ();
//      LOCAL dt = DATETIME ();
//       dt() <- currentDateTime();
         INPUT  f = EXCELFILE DO {
             IMPORT XLS FROM f  TO  titleTabl= A, article   =  C, feature  =  D, kol  =  F, sum  =  I , sumKomm = K;
                  FOR imported(INTEGER i) NEW l = CubeValueComReport DO {
                      nameR(l) <- titleTabl(i);
                      numRow(l)<-i;
                      report(l) <- title;
                      addDimRawNomenkl(article(i),feature(i),'zalnova');
                      dimRawNomenkl(l) <- rawNomenkl();
                      valueCRepCount(l) <- kol(i); 
                      valueCRepSum(l) <- sum(i);
                      valueCommission(l) <- IF sumKomm(i) > 0 THEN sumKomm(i) ELSE 0;
             }
          // узнаем номер строки с заголовком Возвраты
          numRet() <- GROUP MAX numRow(CubeValueComReport i)  IF isISubstring(nameR(i) ,'Возвраты') AND  report(ll) == title; //Возвраты
          IF numRet() THEN {
            valueCRepSum(CubeValueComReport l)    <- -valueCRepSum(l)    WHERE numRow(l) > numRet()  AND report(l) == title;
            valueCommission(CubeValueComReport l) <- -valueCommission(l) WHERE numRow(l) > numRet()  AND report(l) == title;  
          }
          DELETE CubeValueComReport ll WHERE ((valueCRepSum(ll) == 0) OR (NOT valueCRepSum(ll) ) )
                                            AND  report(ll) == title;

         }
 
 }
// 


operationRepComReport(Calc calcP, Task task,CubeValueComReportTitle title,MenuOperationsRepComReport oper) + {
    IF oper == MenuOperationsRepComReport.f1_test THEN   {
      
    }
};
 
 
// ПРОЦЕДУРА ВЫБОРА
functionsRepComReport(Calc calcP, Task task,CubeValueComReportTitle title, ExtRequest er) + {
    // берем отчет - грузим отчет
   CASE EXCLUSIVE  
               WHEN type(er) == TypeRequest.FormBf001ComReport1 THEN { 
                            Report1_Zalnova(calcP,title,task);
                            }
}