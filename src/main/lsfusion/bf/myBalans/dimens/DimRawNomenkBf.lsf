MODULE DimRawNomenklBf;

REQUIRE DimensNomenkl,DimensRawNomenkl,DimensColor,DimensSize,Utils;

NAMESPACE Dimens;

// сырая номенклатура
refKey 'Ref_Key' = DATA STRING[36] (DimRawNomenkl) IN id INDEXED;
article 'Артикул' = DATA ISTRING[50] (DimRawNomenkl) IN id;
barcode 'штрих код' = DATA STRING[36]   (DimRawNomenkl) INDEXED;
colorRaw 'Цвет' = DATA DimColor (DimRawNomenkl);
sizeRaw 'Размер' = DATA DimSize (DimRawNomenkl);
nameFull 'ПолноеНаименование' = DATA ISTRING (DimRawNomenkl) IN id;
colorR '' = DATA LOCAL ISTRING[150] (DimRawNomenkl);
sizeR '' = DATA LOCAL ISTRING[150] (DimRawNomenkl);

EXTEND FORM formDimRawNomenkllist
PROPERTIES (d) article, barcode, colorRaw,sizeRaw, nameFull,refKey,codeSource;


// для номенклатуры делаем загрузку эталонного справочника из торговли

// 
rawNomenkl  = DATA LOCAL DimRawNomenkl();


addDimRawNomenkl(BPISTRING[100] s1,BPISTRING[100] s2,ISTRING[10] sourceId )  {
    rawNomenkl() <- NULL;
    IF   NOT (s1 OR s2) OR  trim( s1 + s2 ) = '' THEN
        rawNomenkl() <- NULL;
    ELSE {
        rawNomenkl() <- GROUP MAX DimRawNomenkl d IF name(d) = (s1+' '+s2); 
          IF NOT rawNomenkl() THEN {
            NEW n =  DimRawNomenkl  {
                name(n) <- CONCAT ' ', s1, s2;
                codeSource(n) <- sourceId;
                rawNomenkl() <- n;
            }
          } 
    }
}

RemoveBF(STRING[100] str) = FORMULA 'TRIM(BOTH FROM REPLACE($1,\'BF\',\'\'))';

addDimRawNomenklArticle(BPISTRING[100] s1,BPISTRING[100] article,ISTRING[10] sourceId )  {
    rawNomenkl() <- NULL;
    IF NOT (s1) OR  trim(s1) = '' THEN
      rawNomenkl() <- NULL;
    ELSE {
      // уберем BF 
      LOCAL articleC1 = STRING ();
      articleC1()  <- RemoveBF(article);
      
      IF  articleC1() AND  articleC1() != '' THEN {
        rawNomenkl() <- GROUP MAX DimRawNomenkl d IF article(d) =  articleC1();      
      }
      IF NOT rawNomenkl() THEN {
          rawNomenkl() <- GROUP MAX DimRawNomenkl d IF name(d) = (s1); 
              IF NOT rawNomenkl() THEN {
                    NEW n =  DimRawNomenkl  {
                        name(n) <- s1;
                        article(n) <- articleC1();
                        codeSource(n) <- sourceId;
                        rawNomenkl() <- n;
                    }
              } 
           } 
    }
}