MODULE DimensRawNomenkl;

REQUIRE TaskTune,Dimens,DimensNomenkl,ExtFormRequestList;

NAMESPACE   Dimens; 

CLASS DimRawNomenkl 'Номенклатура внешняя';
TABLE dimRawNomenkl(DimRawNomenkl);
FORM formDimRawNomenklGroup 'Группы номенклатуры, внешняя'; 
FORM formDimRawNomenkllist 'Номенклатура внешняя'; 
 
FORM formDimRawNomenklTreeList 'Номенклатура внешняя'; 
@configDimWO(DimRawNomenkl){
pos 'Порядок' = DATA INTEGER  (DimRawNomenkl) IN base CHARWIDTH 5;
code 'Код' = DATA STRING[15] (DimRawNomenkl) IN id;
name 'Наименование' = DATA ISTRING[254] (DimRawNomenkl) IN id INDEXED ;
isGroup 'Группа' = DATA BOOLEAN (DimRawNomenkl);
parent 'Родитель' = DATA DimRawNomenkl(DimRawNomenkl);
isRoot 'корень' = DATA BOOLEAN (DimRawNomenkl);

level 'Уровень' (DimRawNomenkl child, DimRawNomenkl parent) =
   RECURSION 1l IF child IS DimRawNomenkl AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

isParent 'Родитель' (DimRawNomenkl child, DimRawNomenkl parent) = TRUE IF level(child, parent);
        
canonicalName 'Каноническое имя' (DimRawNomenkl group) =  GROUP CONCAT name(DimRawNomenkl parent), ' / ' ORDER DESC level(group, parent) CHARWIDTH 50;
levelNum 'levelNum' (DimRawNomenkl group) =   (GROUP  MAX level(group, parent))  CHARWIDTH 2;
backgroundColor(DimRawNomenkl s) = IF isGroup(s) THEN Budget.groupBackColor(3) ;   
tabName 'имя' (DimRawNomenkl group) =  (GROUP CONCAT '    ','    ' ORDER DESC level(group, parent)) + name(group) CHARWIDTH 15;
getRootDimRawNomenkl()  = GROUP MAX DimRawNomenkl c IF isRoot(c) AND NOT isGroup(c);
getEmptyDimRawNomenkl() = GROUP MAX DimRawNomenkl c IF isRoot(c) AND isGroup(c);
WHEN LOCAL CHANGED(isRoot(DimRawNomenkl sd))  AND ( (GROUP SUM(1) IF (isRoot(DimRawNomenkl all) AND NOT isGroup(all)  AND all IS DimRawNomenkl)) > 1 ) DO {
   isRoot(sd)<-NULL ;
   MESSAGE 'только один элемент может представлять корень';
};
// список для выбора группы 
EXTEND FORM formDimRawNomenklGroup  
OBJECTS d = DimRawNomenkl 
PROPERTIES(d) READONLY pos, code, canonicalName
ORDERS pos(d),canonicalName(d) FILTERS isGroup(d) AND NOT isRoot(d);

selectGroup(DimRawNomenkl r) {
 DIALOG formDimRawNomenklGroup OBJECTS d = parent(r) CHANGE;
};
     
EXTEND  FORM  formDimRawNomenklTreeList  
TREE treeDimRawNomenkl t = DimRawNomenkl  PARENT parent(t)
PROPERTIES (t) tabName  BACKGROUND backgroundColor(t)  
,pos
EVENTS ON INIT { EXPAND ALL TOP formDimRawNomenklTreeList.t; }
FILTERS NOT isRoot(t)
ORDERS  pos(t),tabName(t) 
LIST DimRawNomenkl OBJECT t;
DESIGN   formDimRawNomenklTreeList { 
    PROPERTY (tabName(t)) { charWidth='100'; }
} ;

FORM  formDimRawNomenklCard
OBJECTS c = DimRawNomenkl PANEL
PROPERTIES (c) parent,name

EDIT DimRawNomenkl OBJECT c;
         
                         
FORM formDimRawNomenklSelectlist  
    OBJECTS  d = DimRawNomenkl  
    PROPERTIES(d)  READONLY tabName  BACKGROUND backgroundColor(d)  BACKGROUND backgroundColor(d)   
    ,pos  ,canonicalName
    PROPERTIES(d) NEWEDIT,EDIT 
    FILTERS NOT isRoot(d)
    ORDERS  pos(d), canonicalName(d)
    ;

DESIGN   formDimRawNomenklSelectlist { 
   PROPERTY  (tabName(d))   { charWidth='40'; defaultCompare =  'CONTAINS';}
   PROPERTY  (pos(d))   { hide = TRUE ; }
   PROPERTY (canonicalName(d)) { hide = TRUE ;  }
  BOX { size = (1200,600);}
} ;      

delAllDimRawNomenkl 'удалить все'() {
 DELETE DimRawNomenkl a WHERE a IS DimRawNomenkl ;
};

     
      // форма для редактирования списка - открывается только из меню
       EXTEND FORM  formDimRawNomenkllist  
       OBJECTS d = DimRawNomenkl 
       PROPERTIES delAllDimRawNomenkl()
       PROPERTIES(d)   isRoot,NEW ,DELETE, 
                       isGroup BACKGROUND backgroundColor(d),
                       levelNum BACKGROUND backgroundColor(d), 
                       pos BACKGROUND backgroundColor(d), 
                       tabName BACKGROUND backgroundColor(d), 
                       name BACKGROUND backgroundColor(d) 
                       
   
       PROPERTIES      parent 'Родитель' = name(parent(d)) ON CHANGE selectGroup(d) BACKGROUND backgroundColor(d),
                       canonicalName(d) BACKGROUND backgroundColor(d)
       ORDERS  pos(d),canonicalName(d) 
       ; 
       
       NAVIGATOR {
                   dimCatalogs   {
                    NEW formDimRawNomenkllist;
                   }
                 }
        
        

currentDimRawNomenkl = DATA LOCAL DimRawNomenkl ();

newByNameDimRawNomenkl(name) {
 IF name AND NOT (name == '') THEN {
    currentDimRawNomenkl() <- GROUP MAX DimRawNomenkl d IF name(d) == name;
    IF (NOT currentDimRawNomenkl())   THEN {
              NEW  new =  DimRawNomenkl  {
                  name(new) <- name;
                  currentDimRawNomenkl() <- new;
           }
    }  
 }
 ELSE currentDimRawNomenkl() <- NULL;
}
        
        
        
};

// МЕСТО для доп. свойств

// код источника для идентификации базы источника
codeSource 'код источника' = DATA  ISTRING[10]  (DimRawNomenkl) INDEXED ;

// Свойство - привязка к номенклатуре
dimNomenkl 'Номенклатура' = DATA DimNomenkl (DimRawNomenkl) DEFAULTCOMPARE 'CONTAINS'; 

formDimRawNomenkllistSelectNom(DimRawNomenkl rNom) {
  DIALOG formDimNomenklSelectlist OBJECTS d = dimNomenkl(rNom) CHANGE;
};
 
EXTEND FORM formDimRawNomenkllist
PROPERTIES nameNom 'Номенклатура основная'= name(dimNomenkl(d)) AFTER name(d) ON CHANGE formDimRawNomenkllistSelectNom(d);
 