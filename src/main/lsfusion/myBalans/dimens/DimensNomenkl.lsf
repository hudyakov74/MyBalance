MODULE DimensNomenkl;
 
REQUIRE TaskTune,Dimens,ExtFormRequestList;

NAMESPACE   Dimens; 

CLASS DimNomenkl 'Номенклатура';
TABLE dimNomenkl(DimNomenkl);
FORM formDimNomenklGroup 'Группы номенклатуры'; 
FORM formDimNomenkllist 'Номенклатура'; 
 
FORM formDimNomenklTreeList 'Номенклатура'; 
@configDimWO(DimNomenkl){
pos 'Порядок' = DATA INTEGER  (DimNomenkl) IN base CHARWIDTH 5;
code 'Код' = DATA STRING[15] (DimNomenkl) IN id;
name 'Наименование' = DATA ISTRING[254] (DimNomenkl) IN id INDEXED ;
isGroup 'Группа' = DATA BOOLEAN (DimNomenkl);
parent 'Родитель' = DATA DimNomenkl(DimNomenkl);
isRoot 'корень' = DATA BOOLEAN (DimNomenkl);

level 'Уровень' (DimNomenkl child, DimNomenkl parent) =
   RECURSION 1l IF child IS DimNomenkl AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

isParent 'Родитель' (DimNomenkl child, DimNomenkl parent) = TRUE IF level(child, parent);
        
canonicalName 'Каноническое имя' (DimNomenkl group) =  GROUP CONCAT name(DimNomenkl parent), ' / ' ORDER DESC level(group, parent) CHARWIDTH 50;
levelNum 'levelNum' (DimNomenkl group) =   (GROUP  MAX level(group, parent))  CHARWIDTH 2;
backgroundColor(DimNomenkl s) = IF isGroup(s) THEN Budget.groupBackColor(3) ;   
tabName 'имя' (DimNomenkl group) =  (GROUP CONCAT '    ','    ' ORDER DESC level(group, parent)) + name(group) CHARWIDTH 15;
getRootDimNomenkl()  = GROUP MAX DimNomenkl c IF isRoot(c) AND NOT isGroup(c);
getEmptyDimNomenkl() = GROUP MAX DimNomenkl c IF isRoot(c) AND isGroup(c);
WHEN LOCAL CHANGED(isRoot(DimNomenkl sd))  AND ( (GROUP SUM(1) IF (isRoot(DimNomenkl all) AND NOT isGroup(all)  AND all IS DimNomenkl)) > 1 ) DO {
   isRoot(sd)<-NULL ;
   MESSAGE 'только один элемент может представлять корень';
};
// список для выбора группы 
EXTEND FORM formDimNomenklGroup  
OBJECTS d = DimNomenkl 
PROPERTIES(d) READONLY pos, code, canonicalName
ORDERS pos(d),canonicalName(d) FILTERS isGroup(d) AND NOT isRoot(d);

selectGroup(DimNomenkl r) {
 DIALOG formDimNomenklGroup OBJECTS d = parent(r) CHANGE;
};
     
EXTEND  FORM  formDimNomenklTreeList  
TREE treeDimNomenkl t = DimNomenkl  PARENT parent(t)
PROPERTIES (t) tabName  BACKGROUND backgroundColor(t)  
,pos
EVENTS ON INIT { EXPAND ALL TOP formDimNomenklTreeList.t; }
FILTERS NOT isRoot(t)
ORDERS  pos(t),tabName(t) 
LIST DimNomenkl OBJECT t;
DESIGN   formDimNomenklTreeList { 
    PROPERTY (tabName(t)) { charWidth='100'; }
} ;

FORM  formDimNomenklCard
OBJECTS c = DimNomenkl PANEL
PROPERTIES (c) parent,name

EDIT DimNomenkl OBJECT c;
         
                         
FORM formDimNomenklSelectlist  
    OBJECTS  d = DimNomenkl  
    PROPERTIES(d)  READONLY tabName  BACKGROUND backgroundColor(d)  BACKGROUND backgroundColor(d)   
    ,pos  ,canonicalName
    PROPERTIES(d) NEWEDIT,EDIT 
    FILTERS NOT isRoot(d)
    ORDERS  pos(d), canonicalName(d)
    ;

DESIGN   formDimNomenklSelectlist { 
   PROPERTY  (tabName(d))   { charWidth='40'; defaultCompare =  'CONTAINS';}
   PROPERTY  (pos(d))   { hide = TRUE ; }
   PROPERTY (canonicalName(d)) { hide = TRUE ;  }
  BOX { size = (1200,600);}
} ;      

delAllDimNomenkl 'удалить все'() {
 DELETE DimNomenkl a WHERE a IS DimNomenkl ;
};

     
      // форма для редактирования списка - открывается только из меню
       EXTEND FORM  formDimNomenkllist  
       OBJECTS d = DimNomenkl 
       PROPERTIES delAllDimNomenkl()
       PROPERTIES(d)   isRoot,NEW ,DELETE, 
                       isGroup BACKGROUND backgroundColor(d),
                       levelNum BACKGROUND backgroundColor(d), 
                       pos BACKGROUND backgroundColor(d), 
                       tabName BACKGROUND backgroundColor(d), 
                       name BACKGROUND backgroundColor(d) 
                       
   
       PROPERTIES      parent 'Родитель' = name(parent(d)) ON CHANGE selectGroup(d) BACKGROUND backgroundColor(d),
                       canonicalName(d) BACKGROUND backgroundColor(d)
       ORDERS  pos(d),canonicalName(d) 
       ; 
       
       NAVIGATOR {
                   dimCatalogs   {
                    NEW formDimNomenkllist;
                   }
                 }
        
        

currentDimNomenkl = DATA LOCAL DimNomenkl ();

newByNameDimNomenkl(name) {
 IF name AND NOT (name == '') THEN {
    currentDimNomenkl() <- GROUP MAX DimNomenkl d IF name(d) == name;
    IF (NOT currentDimNomenkl())   THEN {
              NEW  new =  DimNomenkl  {
                  name(new) <- name;
                  currentDimNomenkl() <- new;
           }
    }  
 }
 ELSE currentDimNomenkl() <- NULL;
}
        
        
        
};


// МЕСТО для доп. свойств
 
// добавление списка в CalcComposition
TABLE dimDimNomenklTask(Task,DimNomenkl);
checkedDimNomenkl 'выбрано' = DATA BOOLEAN  (Task,DimNomenkl) TABLE dimDimNomenklTask;
@configDim2TaskTune(DimNomenkl,checkedDimNomenkl,vDimNomenkl){ 
    EXTEND FORM  taskTune
    OBJECTS vDimNomenkl = DimNomenkl
    PROPERTIES  checkedDimNomenkl(f,vDimNomenkl) BACKGROUND IF isGroup(vDimNomenkl) THEN Budget.groupBackColor(3) // #f2f2f2
    PROPERTIES READONLY pos(vDimNomenkl),name(vDimNomenkl),tabName(vDimNomenkl),canonicalName(vDimNomenkl)
    ORDERS pos(vDimNomenkl),canonicalName(vDimNomenkl)
   // FILTERS NOT isRoot(var)
    ;
    
    DESIGN taskTune { // расширяем дизайн формы Item
        PROPERTY (name(vDimNomenkl)) { hide = TRUE; }
        PROPERTY (canonicalName(vDimNomenkl)) { hide = TRUE; } 
        PROPERTY (pos(vDimNomenkl)) { charWidth = 5; flex = FALSE; } 
        details {
            MOVE BOX(vDimNomenkl){
                  showIf = NOT isGroup(f);
            }
        }
    };
    
};


