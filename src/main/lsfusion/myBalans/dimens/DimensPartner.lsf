MODULE DimensPartner;

REQUIRE TaskTune,Dimens,ExtFormRequestList;

NAMESPACE   Dimens; 

CLASS DimPartner 'Контрагенты';
TABLE dimPartner(DimPartner);
FORM formDimPartnerGroup 'Группы контрагентов'; 
FORM formDimPartnerlist 'Контрагенты'; 
 
FORM formDimPartnerTreeList 'Контрагенты'; 
@configDimWO(DimPartner){
pos 'Порядок' = DATA INTEGER  (DimPartner) IN base CHARWIDTH 5;
code 'Код' = DATA STRING[15] (DimPartner) IN id;
name 'Наименование' = DATA ISTRING[254] (DimPartner) IN id INDEXED ;
isGroup 'Группа' = DATA BOOLEAN (DimPartner);
parent 'Родитель' = DATA DimPartner(DimPartner);
isRoot 'корень' = DATA BOOLEAN (DimPartner);

level 'Уровень' (DimPartner child, DimPartner parent) =
   RECURSION 1l IF child IS DimPartner AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

isParent 'Родитель' (DimPartner child, DimPartner parent) = TRUE IF level(child, parent);
        
canonicalName 'Каноническое имя' (DimPartner group) =  GROUP CONCAT name(DimPartner parent), ' / ' ORDER DESC level(group, parent) CHARWIDTH 50;
levelNum 'levelNum' (DimPartner group) =   (GROUP  MAX level(group, parent))  CHARWIDTH 2;
backgroundColor(DimPartner s) = IF isGroup(s) THEN Budget.groupBackColor(3) ;   
tabName 'имя' (DimPartner group) =  (GROUP CONCAT '    ','    ' ORDER DESC level(group, parent)) + name(group) CHARWIDTH 15;
getRootDimPartner()  = GROUP MAX DimPartner c IF isRoot(c) AND NOT isGroup(c);
getEmptyDimPartner() = GROUP MAX DimPartner c IF isRoot(c) AND isGroup(c);
WHEN LOCAL CHANGED(isRoot(DimPartner sd))  AND ( (GROUP SUM(1) IF (isRoot(DimPartner all) AND NOT isGroup(all)  AND all IS DimPartner)) > 1 ) DO {
   isRoot(sd)<-NULL ;
   MESSAGE 'только один элемент может представлять корень';
};
// список для выбора группы 
EXTEND FORM formDimPartnerGroup  
OBJECTS d = DimPartner 
PROPERTIES(d) READONLY pos, code, canonicalName
ORDERS pos(d),canonicalName(d) FILTERS isGroup(d) AND NOT isRoot(d);

selectGroup(DimPartner r) {
 DIALOG formDimPartnerGroup OBJECTS d = parent(r) CHANGE;
};
     
EXTEND  FORM  formDimPartnerTreeList  
TREE treeDimPartner t = DimPartner  PARENT parent(t)
PROPERTIES (t) tabName  BACKGROUND backgroundColor(t)  
,pos
// EVENTS ON INIT { EXPAND ALL TOP form##ObjectDim##TreeList.t; }
FILTERS NOT isRoot(t)
ORDERS  pos(t),tabName(t) 
LIST DimPartner OBJECT t;
DESIGN   formDimPartnerTreeList { 
    PROPERTY (tabName(t)) { charWidth='100'; }
} ;
         
                         
FORM formDimPartnerSelectlist  
    OBJECTS  d = DimPartner  
    PROPERTIES(d)  READONLY tabName  BACKGROUND backgroundColor(d)  BACKGROUND backgroundColor(d)   
    ,pos  ,canonicalName
    PROPERTIES(d) NEWEDIT,EDIT 
     // EVENTS ON INIT { EXPAND ALL TOP form##ObjectDim##TreeList.t; }
    FILTERS NOT isRoot(d)
    ORDERS  pos(d), canonicalName(d)
    ;

DESIGN   formDimPartnerSelectlist { 
   PROPERTY  (tabName(d))   { charWidth='40'; defaultCompare =  'CONTAINS';}
   PROPERTY  (pos(d))   { hide = TRUE ; }
   PROPERTY (canonicalName(d)) { hide = TRUE ;  }
  BOX { size = (1200,600);}
} ;      

delAllDimPartner 'удалить все'() {
 DELETE DimPartner a WHERE a IS DimPartner ;
};

     
      // форма для редактирования списка - открывается только из меню
       EXTEND FORM  formDimPartnerlist  
       OBJECTS d = DimPartner 
       PROPERTIES delAllDimPartner()
       PROPERTIES(d)   isRoot,NEW ,DELETE, 
                       isGroup BACKGROUND backgroundColor(d),
                       levelNum BACKGROUND backgroundColor(d), 
                       pos BACKGROUND backgroundColor(d), 
                       tabName BACKGROUND backgroundColor(d), 
                       name BACKGROUND backgroundColor(d) 
                       
   
       PROPERTIES      parent 'Родитель' = name(parent(d)) ON CHANGE selectGroup(d) BACKGROUND backgroundColor(d),
                       canonicalName(d) BACKGROUND backgroundColor(d)
       ORDERS  pos(d),canonicalName(d) 
       ; 
       
       NAVIGATOR {
                   dimCatalogs   {
                    NEW formDimPartnerlist;
                   }
                 }
        
        

currentDimPartner = DATA LOCAL DimPartner ();

newByNameDimPartner(name) {
 IF name AND NOT (name == '') THEN {
    currentDimPartner() <- GROUP MAX DimPartner d IF name(d) == name;
    IF (NOT currentDimPartner())   THEN {
              NEW  new =  DimPartner  {
                  name(new) <- name;
                  currentDimPartner() <- new;
           }
    }  
 }
 ELSE currentDimPartner() <- NULL;
}
        
        
        
};

// МЕСТО для доп. свойств
 
// добавление списка в CalcComposition
TABLE dimPartnerTask(Task,DimPartner);
checkedPartner 'выбрано' = DATA BOOLEAN  (Task,DimPartner) TABLE dimPartnerTask;
@configDim2TaskTune(DimPartner,checkedPartner,vPartner){ 
    EXTEND FORM  taskTune
    OBJECTS vPartner = DimPartner
    PROPERTIES  checkedPartner(f,vPartner) BACKGROUND IF isGroup(vPartner) THEN Budget.groupBackColor(3) // #f2f2f2
    PROPERTIES READONLY pos(vPartner),name(vPartner),tabName(vPartner),canonicalName(vPartner)
    ORDERS pos(vPartner),canonicalName(vPartner)
   // FILTERS NOT isRoot(var)
    ;
    
    DESIGN taskTune { // расширяем дизайн формы Item
        PROPERTY (name(vPartner)) { hide = TRUE; }
        PROPERTY (canonicalName(vPartner)) { hide = TRUE; } 
        PROPERTY (pos(vPartner)) { charWidth = 5; flex = FALSE; } 
        details {
            MOVE BOX(vPartner){
                  showIf = NOT isGroup(f);
            }
        }
    };
    
};

// добавление операций над задачей
// операции Расчетов
