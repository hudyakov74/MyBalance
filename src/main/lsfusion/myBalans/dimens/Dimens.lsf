MODULE Dimens;
REQUIRE CoreColor,CoreMenu;
NAMESPACE   Dimens;

CLASS Dim  'Измерения';

pos 'Порядок' = DATA INTEGER  (Dim) IN base CHARWIDTH 5;
code 'Код' = DATA STRING[15] (Dim) IN id;
name 'Наименование' = DATA STRING[254] (Dim) IN id INDEXED;
isGroup 'Группа' = DATA BOOLEAN (Dim);
parent 'Родитель' = DATA Dim(Dim);
isRoot 'корень' = DATA BOOLEAN (Dim);
 

 
level 'Уровень' (Dim child, Dim parent) =
   RECURSION 1l IF child IS Dim AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

isParent 'Родитель' (Dim child, Dim parent) = TRUE IF level(child, parent);

                     
        
canonicalName 'Каноническое имя' (Dim group) =
   GROUP CONCAT name(Dim parent), ' / ' ORDER DESC level(group, parent) CHARWIDTH 50;
levelNum 'levelNum' (Dim group) =
   (GROUP  MAX level(group, parent))  CHARWIDTH 2;
   
tabName 'имя' (Dim group) =
   (GROUP CONCAT '    ','    ' ORDER DESC level(group, parent)) + name(group) CHARWIDTH 15;

color(Dim s) = IF isGroup(s) THEN Budget.groupBackColor(3) ;
 

META configDim(ObjectDim) 
 // элемент root - представляет собой элемент множества подставляющийся вместо всего множества
 // в формах списков можно не показывать 
     getRoot##ObjectDim()  = GROUP MAX ObjectDim c IF isRoot(c) AND NOT isGroup(c);
     getEmpty##ObjectDim()  = GROUP MAX ObjectDim c IF isRoot(c) AND isGroup(c);
     WHEN LOCAL CHANGED(isRoot(ObjectDim sd))  AND ( (GROUP SUM(1) IF (isRoot(ObjectDim all) AND NOT isGroup(all) AND all IS ObjectDim)) > 1 ) DO {
        isRoot(sd)<-NULL ;
        MESSAGE 'только один элемент может представлять корень';
     };
     // список для выбора группы 
      EXTEND FORM form##ObjectDim##Group  
      OBJECTS d = ObjectDim 
      PROPERTIES(d) READONLY pos, code, canonicalName
      ORDERS pos(d),canonicalName(d) FILTERS isGroup(d) AND NOT isRoot(d);
     
      selectGroup(ObjectDim r) {
          DIALOG form##ObjectDim##Group OBJECTS d = parent(r) CHANGE;
      };
     
  
    EXTEND  FORM  form##ObjectDim##TreeList  
    TREE tree##ObjectDim t = ObjectDim  PARENT parent(t)
    PROPERTIES (t) tabName BACKGROUND color(t), name BACKGROUND color(t),pos
    EVENTS ON INIT { EXPAND ALL TOP form##ObjectDim##TreeList.t; }
    FILTERS NOT isRoot(t)
    ORDERS  pos(t),name(t)
    LIST ObjectDim OBJECT t;
  
   // форма для редактирования списка - открывается только из меню
    EXTEND FORM  form##ObjectDim##list  
    OBJECTS d = ObjectDim 
    PROPERTIES(d)   isRoot,NEW ,DELETE,
                    isGroup BACKGROUND color(d),
                    levelNum BACKGROUND color(d), 
                    pos BACKGROUND color(d), 
                    tabName BACKGROUND color(d), 
                    name BACKGROUND color(d) 
                    

    PROPERTIES      parent 'Родитель' = name(parent(d)) ON CHANGE selectGroup(d) BACKGROUND color(d),
                    canonicalName(d) BACKGROUND color(d)
    ORDERS  pos(d),canonicalName(d) 
    ; 
 END


META configDim2TaskTune(ObjectDim,checked,var) 
    EXTEND FORM  taskTune
    OBJECTS var = ObjectDim
    PROPERTIES  checked(f,var) BACKGROUND IF isGroup(var) THEN Budget.groupBackColor(3) // #f2f2f2
    PROPERTIES READONLY pos(var),name(var),tabName(var),canonicalName(var)
    ORDERS pos(var),canonicalName(var)
   // FILTERS NOT isRoot(var)
    ;
    
    DESIGN taskTune { // расширяем дизайн формы Item
        PROPERTY (name(var)) { hide = TRUE; }
        PROPERTY (canonicalName(var)) { hide = TRUE; } 
        PROPERTY (pos(var)) { charWidth = 5; flex = FALSE; } 
        details {
            MOVE BOX(var){
                  showIf = NOT isGroup(f);
            }
        }
    };
    
END

META configDimWOGroup(ObjectDim)

pos 'Порядок' = DATA INTEGER  (ObjectDim) IN base CHARWIDTH 5;
code 'Код' = DATA STRING[15] (ObjectDim) IN id;
name 'Наименование' = DATA ISTRING[254] (ObjectDim) IN id INDEXED ;
isRoot 'корень' = DATA BOOLEAN (ObjectDim);
isGroup 'Е' = DATA BOOLEAN (ObjectDim);
getRoot##ObjectDim()   = GROUP MAX ObjectDim c IF isRoot(c) AND  NOT isGroup(c);
getEmpty##ObjectDim() = GROUP MAX ObjectDim c IF isRoot(c) AND isGroup(c);


WHEN LOCAL CHANGED(isRoot(ObjectDim sd))  AND ( (GROUP SUM(1) IF (isRoot(ObjectDim all) AND NOT isGroup(all) AND all IS ObjectDim)) > 1 ) DO {
   isRoot(sd)<-NULL ;
   MESSAGE 'только один элемент может представлять корень';
};
     
FORM form##ObjectDim##Selectlist  
    OBJECTS  d = ObjectDim  
    PROPERTIES(d)  READONLY   
    pos ,name 
    PROPERTIES(d) NEWEDIT,EDIT 
     // EVENTS ON INIT { EXPAND ALL TOP form##ObjectDim##TreeList.t; }
    FILTERS NOT isRoot(d)
    ORDERS  pos(d)
    ;

DESIGN   form##ObjectDim##Selectlist { 
   PROPERTY  (name(d))  { charWidth='40'; defaultCompare =  'CONTAINS';}
   PROPERTY  (pos(d))   { hide = TRUE ; }
   BOX { size = (1200,600);}
} ;      

delAll##ObjectDim 'удалить все'() {
 DELETE ObjectDim a WHERE a IS ObjectDim ;
};
// форма для редактирования списка - открывается только из меню
EXTEND FORM  form##ObjectDim##list  
OBJECTS d = ObjectDim 
PROPERTIES delAll##ObjectDim()
PROPERTIES(d)   isRoot,isGroup,NEW ,DELETE, 
               pos, name 
ORDERS  pos(d) 
; 
NAVIGATOR {
dimCatalogs   {
                 NEW form##ObjectDim##list;
              }
}  
       
       
END

META configDimWO(ObjectDim)
pos 'Порядок' = DATA INTEGER  (ObjectDim) IN base CHARWIDTH 5;
code 'Код' = DATA STRING[15] (ObjectDim) IN id;
name 'Наименование' = DATA ISTRING[254] (ObjectDim) IN id INDEXED ;
isGroup 'Группа' = DATA BOOLEAN (ObjectDim);
parent 'Родитель' = DATA ObjectDim(ObjectDim);
isRoot 'корень' = DATA BOOLEAN (ObjectDim);

level 'Уровень' (ObjectDim child, ObjectDim parent) =
   RECURSION 1l IF child IS ObjectDim AND parent = child
        STEP 2l IF parent = parent($parent) MATERIALIZED;

isParent 'Родитель' (ObjectDim child, ObjectDim parent) = TRUE IF level(child, parent);
        
canonicalName 'Каноническое имя' (ObjectDim group) =  GROUP CONCAT name(ObjectDim parent), ' / ' ORDER DESC level(group, parent) CHARWIDTH 50;
levelNum 'levelNum' (ObjectDim group) =   (GROUP  MAX level(group, parent))  CHARWIDTH 2;
backgroundColor(ObjectDim s) = IF isGroup(s) THEN Budget.groupBackColor(3) ;   
tabName 'имя' (ObjectDim group) =  (GROUP CONCAT '    ','    ' ORDER DESC level(group, parent)) + name(group) CHARWIDTH 15;
getRoot##ObjectDim()  = GROUP MAX ObjectDim c IF isRoot(c) AND NOT isGroup(c);
getEmpty##ObjectDim() = GROUP MAX ObjectDim c IF isRoot(c) AND isGroup(c);
WHEN LOCAL CHANGED(isRoot(ObjectDim sd))  AND ( (GROUP SUM(1) IF (isRoot(ObjectDim all) AND NOT isGroup(all)  AND all IS ObjectDim)) > 1 ) DO {
   isRoot(sd)<-NULL ;
   MESSAGE 'только один элемент может представлять корень';
};
// список для выбора группы 
EXTEND FORM form##ObjectDim##Group  
OBJECTS d = ObjectDim 
PROPERTIES(d) READONLY pos, code, canonicalName
ORDERS pos(d),canonicalName(d) FILTERS isGroup(d) AND NOT isRoot(d);

selectGroup(ObjectDim r) {
 DIALOG form##ObjectDim##Group OBJECTS d = parent(r) CHANGE;
};
     
EXTEND  FORM  form##ObjectDim##TreeList  
TREE tree##ObjectDim t = ObjectDim  PARENT parent(t)
PROPERTIES (t) tabName  BACKGROUND backgroundColor(t)  
,pos
// EVENTS ON INIT { EXPAND ALL TOP form##ObjectDim##TreeList.t; }
FILTERS NOT isRoot(t)
ORDERS  pos(t),tabName(t) 
LIST ObjectDim OBJECT t;
DESIGN   form##ObjectDim##TreeList { 
    PROPERTY (tabName(t)) { charWidth='100'; }
} ;
         
                         
FORM form##ObjectDim##Selectlist  
    OBJECTS  d = ObjectDim  
    PROPERTIES(d)  READONLY tabName  BACKGROUND backgroundColor(d)  BACKGROUND backgroundColor(d)   
    ,pos  ,canonicalName
    PROPERTIES(d) NEWEDIT,EDIT 
     // EVENTS ON INIT { EXPAND ALL TOP form##ObjectDim##TreeList.t; }
    FILTERS NOT isRoot(d)
    ORDERS  pos(d), canonicalName(d)
    ;

DESIGN   form##ObjectDim##Selectlist { 
   PROPERTY  (tabName(d))   { charWidth='40'; defaultCompare =  'CONTAINS';}
   PROPERTY  (pos(d))   { hide = TRUE ; }
   PROPERTY (canonicalName(d)) { hide = TRUE ;  }
  BOX { size = (1200,600);}
} ;      

delAll##ObjectDim 'удалить все'() {
 DELETE ObjectDim a WHERE a IS ObjectDim ;
};

     
      // форма для редактирования списка - открывается только из меню
       EXTEND FORM  form##ObjectDim##list  
       OBJECTS d = ObjectDim 
       PROPERTIES delAll##ObjectDim()
       PROPERTIES(d)   isRoot,NEW ,DELETE, 
                       isGroup BACKGROUND backgroundColor(d),
                       levelNum BACKGROUND backgroundColor(d), 
                       pos BACKGROUND backgroundColor(d), 
                       tabName BACKGROUND backgroundColor(d), 
                       name BACKGROUND backgroundColor(d) 
                       
   
       PROPERTIES      parent 'Родитель' = name(parent(d)) ON CHANGE selectGroup(d) BACKGROUND backgroundColor(d),
                       canonicalName(d) BACKGROUND backgroundColor(d)
       ORDERS  pos(d),canonicalName(d) 
       ; 
       
       NAVIGATOR {
                   dimCatalogs   {
                    NEW form##ObjectDim##list;
                   }
                 }
        
        

current##ObjectDim = DATA LOCAL ObjectDim ();

newByName##ObjectDim(name) {
 IF name AND NOT (name == '') THEN {
    current##ObjectDim() <- GROUP MAX ObjectDim d IF name(d) == name;
    IF (NOT current##ObjectDim())   THEN {
              NEW  new =  ObjectDim  {
                  name(new) <- name;
                  current##ObjectDim() <- new;
           }
    }  
 }
 ELSE current##ObjectDim() <- NULL;
}
        
        
        
END 