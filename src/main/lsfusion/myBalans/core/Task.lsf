MODULE Task;

REQUIRE CalcCore, DistribTuneRef, LogicCalc, TypeTask, Utils;

NAMESPACE Budget;

// --- Задачи расчета -------------------------------------------
CLASS  Task 'Задачи расчета';
TABLE task(Task);
pos         'Порядок'               = DATA INTEGER  (Task) IN base CHARWIDTH 5;
nameTask    'Наименование задачи'   = DATA STRING[1000] (Task) IN id;
type        'Тип'                   = DATA TypeTask (Task);
calcVariant 'Вид расчета'           = DATA CalcVariant (Task) NONULL;
isGroup     'Это группа'            = DATA BOOLEAN (Task); 
parent      'В группе'              = DATA Task(Task);
tuneCalc    'Алгоритм расчета'      = DATA DistribTuneRef(Task);
logicTask   'Алгоритм константа'    = DATA LogicCalc(Task);

level       'Уровень'  (Task child,Task parent) = 
   RECURSION 1l IF child IS Task AND parent = child STEP 2l IF parent = parent($parent) MATERIALIZED;

levelInt 'Уровень' (Task child, Task parent) =
   RECURSION 1l IF child IS Task AND parent = child STEP 1l IF parent = parent($parent) MATERIALIZED;   
 

levelNumInt 'levelNumInt' (Task group) = LONG (GROUP  SUM levelInt(group,Task parent))-1  CHARWIDTH 2; 

isParent 'Родитель' (Task child, Task parent) = TRUE IF level(child, parent);
    
nameTaskTab 'Наименование задачи' (Task group)=
 ( GROUP CONCAT '    ','.   '  ORDER DESC levelInt(group, Task parent)  ) + nameTask(group) CHARWIDTH 15;
 

canonicalName 'Каноническое имя' (Task group) =
   GROUP CONCAT nameTask(Task parent), ' / ' ORDER DESC levelInt(group, parent) CHARWIDTH 50;
 

FORM taskList 'Список задач расчета'
OBJECTS  f = Task
PROPERTIES nameTaskTab(f) FOREGROUND IF isGroup(f) THEN groupFontColor()
LIST Task OBJECT f
;

FORM taskListByCalcVariant 'Список задач расчета'
OBJECTS   c = CalcVariant, t = TypeTask
OBJECTS   f = Task
    PROPERTIES READONLY PANEL n = nameCalcVariant(c), nt = nameCalcBook(t)   
    PROPERTIES READONLY pos(f),nameTaskTab(f) FOREGROUND IF isGroup(f) THEN groupFontColor()
    ORDERS pos(f)
FILTERS calcVariant(f) == c AND type(f) == t 
;

FORM taskListGroup 'Группы задач расчета'
OBJECTS  calcVariant = CalcVariant PANEL 
OBJECTS  f = Task
PROPERTIES nameTaskTab(f) FOREGROUND IF isGroup(f) THEN groupFontColor()
FILTERS isGroup(f) AND calcVariant(f) == calcVariant;

openTaskListGroup(Task curr){
    DIALOG taskListGroup OBJECTS calcVariant=calcVariant(curr), f = parent(curr) CHANGE;
}

FORM taskListCard 'Карточка задачи расчета'
OBJECTS  f = Task  PANEL 
PROPERTIES  pos(f), nameTask(f) ,
            type_p  'Тип' = nameCalcBook(type(f)),
            parent 'В группе' = nameTask(parent(f)) ON CHANGE openTaskListGroup(f),
            tuneCalc 'Алгоритм расчета' = name(tuneCalc(f)),
            logicCalc 'Алгоритм константа' =  name(logicTask(f)) ON CHANGE { 
                EVAL ACTION 'INPUT inp_ = LogicCalc'+ substrFrom(staticName(type(f)), strpos(staticName(type(f)),'.')+1) +' CHANGE = logicTask($1);' PARAMS f; //MyBalanceCalc_TypeTask.SalePayouts
                
            } // выбор элемента зависит от type
        
            
EDIT Task OBJECT f;

DESIGN taskListCard {
    OBJECTS { 
      NEW panel {
        horizontal = FALSE;
        MOVE PROPERTY (nameTask(f)) {charWidth = 30;}   
        MOVE PROPERTY (type_p) ;   
        MOVE PROPERTY (parent)   {charWidth = 45;}    
    }
    }
}

